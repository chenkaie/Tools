#!/usr/bin/env bash

if [ $# -lt 2 ]; then
	echo "Usage: $0 <DEVICE_IP> <FW_BIN>"
	exit 0
fi

# load credentials if exists
[ -r ~/.creds ] && . ~/.creds

DEVICE_IP="$1"
FW_BIN="$2"

if [ "$FW_BIN" = "-" ]; then
	. ubnt-devel-aircam
	FW_BIN=$PRODUCTDIR/rel-firmware.bin
fi

echo Firmware name: "$(basename "$FW_BIN")"

SSH_OPTION_IGNORE_CHECK="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# Methond 1: Simpler way but not preseting scp uploading progress
# Methond 2: Use ssh key for auth instead of sshpass
METHOD=2

case $METHOD in
	1)
		sshpass -p ${SSH_PASS:-ubnt} scp -O $SSH_OPTION_IGNORE_CHECK "$FW_BIN" ${SSH_USER:-ubnt}@"$DEVICE_IP":/tmp/fwupdate.bin
		sshpass -p ${SSH_PASS:-ubnt} ssh $SSH_OPTION_IGNORE_CHECK ${SSH_USER:-ubnt}@"$DEVICE_IP" /usr/bin/fwupdate -m || echo "FW upload fail!"
		;;
	2)
		KEY="$HOME/.ssh/id_rsa_ubnt"
		if [ ! -e "$KEY" ]; then
			ssh-keygen -t rsa -N "" -f "$KEY"
		fi

		for passwd in ${SSH_PASS:-ubnt}; do
			#sshpass -p ${passwd} ssh-copy-id $SSH_OPTION_IGNORE_CHECK -i "$KEY".pub ${SSH_USER:-ubnt}@"$DEVICE_IP" >/dev/null 2>&1
			sshpass -p ${passwd} ssh ${SSH_USER:-ubnt}@"$DEVICE_IP" "tee -a /etc/dropbear/authorized_keys" < "$KEY".pub >/dev/null 2>&1

			[ $? -eq 0 ] || { echo "try next..."; continue; }
			scp -O $SSH_OPTION_IGNORE_CHECK -i "$KEY" "$FW_BIN" ${SSH_USER:-ubnt}@"$DEVICE_IP":/tmp/fwupdate.bin
			[ $? -eq 0 ] && { ssh -i "$KEY" ${SSH_USER:-ubnt}@"$DEVICE_IP" /usr/bin/fwupdate -m; exit $?; } || echo "FW upload fail!"
		done
		;;
esac

